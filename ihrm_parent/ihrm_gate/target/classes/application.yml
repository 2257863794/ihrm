#注册到eureka的服务地址
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:6868/eureka/
  instance:
    preferIpAddress : true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}

#服务配置
server:
  #端口号
  port: 9090

#spring配置
spring:
  #1.应用配置
  application:
    name: ihrm-gate #指定服务名
  redis:
    host: 127.0.0.1
    port: 6379
    password: redis2020
#配置路由规则
zuul:
  host:
    connect-timeout-millis: 15000 #15000
    socket-timeout-millis: 60000
  routes:
    #路由id，随便写
    ihrm-company:
      #配置映射的路径地址
      path: /company/**
     # url: http://127.0.0.1:9001
      #指定服务名称
      serviceId: ihrm-company
      #zuul 会自动的删除我们请求的前缀,删除掉company localhost:9090/company
      stripPrefix: false #不删除请求前缀
      sentiviteHeaders:   #将指定路由的敏感头设置为空
      customSensitiveHeaders: true #对指定路由开启自定义敏感头


    ihrm-system: #系统
      path: /sys/** #配置请求URL的请求规则
      serviceId: ihrm-system #指定Eureka注册中心中的服务id
      stripPrefix: false
      sentiviteHeaders:   #将指定路由的敏感头设置为空
      customSensitiveHeaders: true #对指定路由开启自定义敏感头

    ihrm-employee: #员工
      path: /employees/** #配置请求URL的请求规则
      serviceId: ihrm-employee #指定Eureka注册中心中的服务id
      stripPrefix: false
      sentiviteHeaders:   #将指定路由的敏感头设置为空
      customSensitiveHeaders: true  #对指定路由开启自定义敏感头

#    ihrm-social-securitys: #社保
#      path: /social_securitys/** #配置请求URL的请求规则
#      serviceId: ihrm-social-securitys #指定Eureka注册中心中的服务id
#      stripPrefix: false
#      sentiviteHeaders:   #将指定路由的敏感头设置为空
#      customSensitiveHeaders: true #对指定路由开启自定义敏感头

    ihrm-att-cfg: #考勤设置
      path: /cfg/** #配置请求URL的请求规则
      serviceId: ihrm-attendance #指定Eureka注册中心中的服务id
      stripPrefix: false
      sentiviteHeaders:   #将指定路由的敏感头设置为空
      customSensitiveHeaders: true #对指定路由开启自定义敏感头

    ihrm-att-attendances: #考勤管理[导出、导入、归档、报表]
      path: /attendances/** #配置请求URL的请求规则
      serviceId: ihrm-attendance #指定Eureka注册中心中的服务id
      stripPrefix: false
      sentiviteHeaders:   #将指定路由的敏感头设置为空
      customSensitiveHeaders: true #对指定路由开启自定义敏感头